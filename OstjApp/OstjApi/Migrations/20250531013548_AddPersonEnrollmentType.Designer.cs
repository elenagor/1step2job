// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OstjApi.Data;
using OstjApi.Models;
using Pgvector;

#nullable disable

namespace OstjApi.Migrations
{
    [DbContext(typeof(OstjDbContext))]
    [Migration("20250531013548_AddPersonEnrollmentType")]
    partial class AddPersonEnrollmentType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OstjApi.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplyUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apply_url");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_id");

                    b.Property<string>("LocationCity")
                        .HasColumnType("text")
                        .HasColumnName("location_city");

                    b.Property<string>("LocationCountry")
                        .HasColumnType("text")
                        .HasColumnName("location_country");

                    b.Property<bool?>("LocationIsRemote")
                        .HasColumnType("boolean")
                        .HasColumnName("location_is_remote");

                    b.Property<string>("LocationState")
                        .HasColumnType("text")
                        .HasColumnName("location_state");

                    b.Property<DateTime>("Published")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published");

                    b.Property<float?>("SalaryMax")
                        .HasColumnType("real")
                        .HasColumnName("salary_max");

                    b.Property<float?>("SalaryMin")
                        .HasColumnType("real")
                        .HasColumnName("salary_min");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Vector>("TitleEmbeddings")
                        .HasColumnType("vector(4096)")
                        .HasColumnName("title_embeddings");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_jobs");

                    b.ToTable("jobs", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(4096)")
                        .HasColumnName("embedding");

                    b.Property<bool>("IsUserDefined")
                        .HasColumnType("boolean")
                        .HasColumnName("is_user_defined");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_job_titles");

                    b.ToTable("job_titles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Otc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_used");

                    b.HasKey("Id")
                        .HasName("pk_otcs");

                    b.HasIndex("Email", "Code")
                        .IsUnique()
                        .HasDatabaseName("ix_otcs_email_code");

                    b.ToTable("otcs", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EnrollmentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("enrollment_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_persons_email");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resume");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_profiles");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_profiles_person_id");

                    b.ToTable("profiles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<ComparisonDetail[]>("ComparisonDetails")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("comparison_details");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<int>("JobId")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("profile_id");

                    b.Property<string>("Reasoning")
                        .HasColumnType("text")
                        .HasColumnName("reasoning");

                    b.Property<int>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score");

                    b.HasKey("Id")
                        .HasName("pk_results");

                    b.HasIndex("JobId")
                        .HasDatabaseName("ix_results_job_id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_results_person_id");

                    b.HasIndex("ProfileId")
                        .HasDatabaseName("ix_results_profile_id");

                    b.ToTable("results", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Profile", b =>
                {
                    b.HasOne("OstjApi.Models.Person", null)
                        .WithMany("Profiles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_profiles_persons_person_id");
                });

            modelBuilder.Entity("OstjApi.Models.Result", b =>
                {
                    b.HasOne("OstjApi.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_results_jobs_job_id");

                    b.HasOne("OstjApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_results_persons_person_id");

                    b.HasOne("OstjApi.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_results_profiles_profile_id");

                    b.Navigation("Job");

                    b.Navigation("Person");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("OstjApi.Models.Person", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}

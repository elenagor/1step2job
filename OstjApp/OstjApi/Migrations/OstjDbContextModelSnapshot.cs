// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OstjApi.Data;
using OstjApi.Models;
using Pgvector;

#nullable disable

namespace OstjApi.Migrations
{
    [DbContext(typeof(OstjDbContext))]
    partial class OstjDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OstjApi.Models.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("profile_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_job_titles");

                    b.HasIndex("ProfileId")
                        .HasDatabaseName("ix_job_titles_profile_id");

                    b.ToTable("job_titles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.JobTitleDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(4096)")
                        .HasColumnName("embedding");

                    b.Property<bool>("IsUserDefined")
                        .HasColumnType("boolean")
                        .HasColumnName("is_user_defined");

                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("profile_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_job_titles");

                    b.ToTable("job_titles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Otc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_used");

                    b.HasKey("Id")
                        .HasName("pk_otcs");

                    b.HasIndex("Email", "Code")
                        .IsUnique()
                        .HasDatabaseName("ix_otcs_email_code");

                    b.ToTable("otcs", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("EnrollmentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("enrollment_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_persons_email");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.PersonPositionMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<ComparisonDetail[]>("ComparisonDetails")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("comparison_details");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<bool>("IsSent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sent");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("profile_id");

                    b.Property<string>("Reasoning")
                        .HasColumnType("text")
                        .HasColumnName("reasoning");

                    b.Property<int>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(-1)
                        .HasColumnName("score");

                    b.HasKey("Id")
                        .HasName("pk_person_position_matches");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_person_position_matches_person_id");

                    b.HasIndex("PositionId")
                        .HasDatabaseName("ix_person_position_matches_position_id");

                    b.HasIndex("ProfileId")
                        .HasDatabaseName("ix_person_position_matches_profile_id");

                    b.ToTable("person_position_matches", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplyUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("apply_url");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("external_id");

                    b.Property<bool?>("IsRemote")
                        .HasColumnType("boolean")
                        .HasColumnName("is_remote");

                    b.Property<DateTime>("Published")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published");

                    b.Property<float?>("SalaryMax")
                        .HasColumnType("real")
                        .HasColumnName("salary_max");

                    b.Property<float?>("SalaryMin")
                        .HasColumnType("real")
                        .HasColumnName("salary_min");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.Property<Vector>("TitleEmbeddings")
                        .HasColumnType("vector(4096)")
                        .HasColumnName("title_embeddings");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("type");

                    b.ComplexProperty<Dictionary<string, object>>("Location", "OstjApi.Models.Position.Location#Location", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_city");

                            b1.Property<string>("Country")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_country");

                            b1.Property<string>("StateOrRegion")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_state_or_region");
                        });

                    b.HasKey("Id")
                        .HasName("pk_positions");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("PersonId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.HasKey("Id")
                        .HasName("pk_profiles");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_profiles_person_id");

                    b.ToTable("profiles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.ProfileDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("AcceptRemote")
                        .HasColumnType("boolean")
                        .HasColumnName("accept_remote");

                    b.Property<string>("ExtraRequirements")
                        .HasColumnType("text")
                        .HasColumnName("extra_requirements");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("PersonId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resume");

                    b.Property<float?>("SalaryMax")
                        .HasColumnType("real")
                        .HasColumnName("salary_max");

                    b.Property<float?>("SalaryMin")
                        .HasColumnType("real")
                        .HasColumnName("salary_min");

                    b.ComplexProperty<Dictionary<string, object>>("Location", "OstjApi.Models.ProfileDetails.Location#Location", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_city");

                            b1.Property<string>("Country")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_country");

                            b1.Property<string>("StateOrRegion")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("location_state_or_region");
                        });

                    b.HasKey("Id")
                        .HasName("pk_profiles");

                    b.ToTable("profiles", (string)null);
                });

            modelBuilder.Entity("OstjApi.Models.JobTitle", b =>
                {
                    b.HasOne("OstjApi.Models.ProfileDetails", null)
                        .WithMany("JobTitles")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_job_titles_profiles_profile_id");
                });

            modelBuilder.Entity("OstjApi.Models.JobTitleDetails", b =>
                {
                    b.HasOne("OstjApi.Models.JobTitle", null)
                        .WithOne("JobTitleDetails")
                        .HasForeignKey("OstjApi.Models.JobTitleDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_job_titles_job_titles_id");
                });

            modelBuilder.Entity("OstjApi.Models.PersonPositionMatch", b =>
                {
                    b.HasOne("OstjApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_person_position_matches_persons_person_id");

                    b.HasOne("OstjApi.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_person_position_matches_positions_position_id");

                    b.HasOne("OstjApi.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_person_position_matches_profile_profile_id");

                    b.Navigation("Person");

                    b.Navigation("Position");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("OstjApi.Models.Profile", b =>
                {
                    b.HasOne("OstjApi.Models.Person", null)
                        .WithMany("Profiles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_profiles_persons_person_id");
                });

            modelBuilder.Entity("OstjApi.Models.ProfileDetails", b =>
                {
                    b.HasOne("OstjApi.Models.Profile", null)
                        .WithOne("ProfileDetails")
                        .HasForeignKey("OstjApi.Models.ProfileDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_profiles_profiles_id");
                });

            modelBuilder.Entity("OstjApi.Models.JobTitle", b =>
                {
                    b.Navigation("JobTitleDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("OstjApi.Models.Person", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("OstjApi.Models.Profile", b =>
                {
                    b.Navigation("ProfileDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("OstjApi.Models.ProfileDetails", b =>
                {
                    b.Navigation("JobTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
